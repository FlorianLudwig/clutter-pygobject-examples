#!/usr/bin/env python3

import sys

from gi.repository import Clutter, Pango

class CbButton(Clutter.Actor):
	def __init__(self):
		Clutter.Actor.__init__(self)

		self.__text  = Clutter.Text()
		self.__click = Clutter.ClickAction()
		self.__box   = Clutter.Box()

		self.__text.set_line_alignment(Pango.Alignment.CENTER)
		self.__text.set_ellipsize(Pango.EllipsizeMode.END)

		self.__click.connect("clicked", self.clicked)

		self.__box.set_layout_manager(Clutter.BinLayout.new(
			Clutter.BinAlignment.CENTER,
			Clutter.BinAlignment.CENTER
		))

		self.__box.set_reactive(True)
		self.__box.add_action(self.__click)
		self.__box.add_actor(self.__text)

	def set_text(self, text):
		self.__text.set_text(text)

	def get_text(self):
		return self.__text.get_text()

	def get_preferred_width(self, height):
		return self.__box.get_preferred_width(height) + 20.0

	def get_preferred_height(self, width):
		return self.__box.get_preferred_height(width) + 20.0

	def allocate(self, *args, **kargs):
		print("in allocate...")

	def paint(self, *args, **kargs):
		print("in paint...")

	def clicked(self, *args, **kargs):
		print("clicked...")

if __name__ == "__main__":
	Clutter.init(sys.argv)

	stage = Clutter.Stage()

	stage.set_title("cb-button")
	stage.connect("destroy", lambda *a: Clutter.main_quit())

	button = CbButton()

	# button.set_text("Hello, World!")
	# button.set_color(Clutter.Color.get_static(Clutter.StaticColor.GRAY))
	
	# print(button.get_preferred_width())
	# print(button.get_preferred_height())
	# print(button.get_preferred_size())

	stage.add_actor(button)
	stage.show_all()

	Clutter.main()

